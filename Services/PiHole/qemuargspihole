args="-name PiHole \
-bios /usr/share/ovmf/x64/ovmf_x64.bin \
-daemonize \
-pidfile /run/qemu_pihole.pid \
-vga std \
-nodefaults \
-enable-kvm \
-machine type=q35,accel=kvm \
-cpu host \
-smp 4,sockets=1,cores=4,threads=1 \
-m 512 \
-monitor telnet:localhost:7101,server,nowait,nodelay \
-nographic \
-k fr-be \
-serial none \
-parallel none \
-rtc clock=host,base=localtime \
-drive file=/home/fileserver/Applications/pihole/pihole.img,id=disk0,if=none,aio=native,cache=none,format=raw,discard=unmap \
-object iothread,id=iothread0 \
-device virtio-scsi,iothread=iothread0 \
-device scsi-hd,drive=disk0 \
-device virtio-net-pci,netdev=network1,mac=52:54:00:00:00:02 \
-netdev tap,id=network1,ifname=tap1,script=no,downscript=no"

############################
# Explanation of Arguments #
############################

# -bios /usr/share/ovmf/x64/ovmf_x64.bin \ -> Use an EFI (OVMF) Bios, updated through AUR package
# -daemonize \
# -pidfile /run/qemu_windowsvm.pid \
# -vga std \ -> Use the standard vga that qemu provides (for the VNC server)
# -nodefaults \
# -enable-kvm \
# -machine type=q35,accel=kvm \ -> Use the q35 (Intel ICH9) type of emulation
# -cpu host \
# -smp 4,sockets=4,cores=1,threads=1 \ -> Enable a quad-core CPU for this VM
# -m 512 \ -> Use 512 mb of memory
# -monitor telnet:localhost:7101,server,nowait,nodelay \ -> Create a telnet monitor for qemu commands - used for the stoppihole script
# -nographic \ -> Do not display a QEMU monitor for interaction with the VM - the telnet monitor already accomplishes this
# -k fr-be \ -> Apply keymap of fr-be (nl-be does not work)
# -serial none \
# -parallel none \
# -name PiHole \ -> Name of this VM
# -rtc clock=host,base=localtime \ -> Synchronize clocks between guest and host
# -drive file=/home/fileserver/pihole.img,id=disk0,if=none,aio=native,cache=none,format=raw,discard=unmap \ -> OS Drive (10 Gb raw image)
# -object iothread,id=iothread0 \ -> IO thread opstarten, 1 per harde schijf die wordt aangesloten op de VM
# -device virtio-scsi,iothread=iothread0 \
# -device scsi-hd,drive=disk0 \
# -device virtio-net-pci,netdev=network1,mac=52:54:00:00:00:02 \ -> Networking card through virtio-net-pci. Different mac address applied otherwise pihole & windowsvm have the same MAC address. Also different network id.
# -netdev tap,id=network1,ifname=tap0,script=no,downscript=no -> Enable bridged networking


##################
# Extra Commands #
##################

#########################################
# Load in the Ubuntu Server Install DVD #
#########################################

# -drive file=/home/fileserver/Applications/pihole/ubuntu.iso,id=isocd,format=raw,if=none -device ide-cd,bus=ide.0,drive=isocd

####################################
# Start a VNC Server on port :5901 #
####################################
# -vnc :1
